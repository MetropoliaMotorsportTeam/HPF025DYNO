import can
import cantools
import random
import time

# Load the DBC file
DBC_FILE = "your_dbc_file.dbc"  # Replace with your actual DBC file
db = cantools.database.load_file(DBC_FILE)

# List available messages
print("\nAvailable Messages:")
for msg in db.messages:
    print(f"- {msg.name} (ID: {hex(msg.frame_id)})")

# User selects multiple messages
msg_names = input("\nEnter message names to send (comma-separated): ").split(',')
selected_messages = []

for msg_name in msg_names:
    msg_name = msg_name.strip()
    try:
        selected_messages.append(db.get_message_by_name(msg_name))
    except KeyError:
        print(f"Error: Message '{msg_name}' not found in DBC.")

if not selected_messages:
    print("No valid messages selected. Exiting.")
    exit(1)

# Initialize all signals with default values
default_values = {}
for message in selected_messages:
    default_values[message.name] = {sig.name: 0 for sig in message.signals}

# Setup CAN bus with real speed simulation
bus = can.interface.Bus(channel="vcan0", interface="socketcan", bitrate=1000000)

print("\n🔁 Sending random values for selected messages...")
print("Press CTRL+C to stop.\n")

try:
    while True:
        for message in selected_messages:
            for sig in message.signals:
                min_val = sig.minimum if sig.minimum is not None else 0
                max_val = sig.maximum if sig.maximum is not None else 100
                random_value = random.randint(int(min_val), int(max_val))
                default_values[message.name][sig.name] = random_value

            # Encode and send the CAN message
            data = message.encode(default_values[message.name])
            can_msg = can.Message(arbitration_id=message.frame_id, data=data, is_extended_id=False)
            bus.send(can_msg)
            print(f"📡 Sent: {message.name} | Data: {default_values[message.name]}")

            # Simulate CAN bus timing (1 Mbps, ~1ms per 8-byte frame)
            time.sleep(0.001)

except KeyboardInterrupt:
    print("\n🚪 Stopping message transmission.")

